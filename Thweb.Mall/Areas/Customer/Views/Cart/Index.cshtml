@model IEnumerable<Cart>
@{
    var orderTotal = 0;
    if (Model != null)
    {
        orderTotal = Model.Sum(item => item.Count * item.Product.Price);
    }
}
<div class="">

    <section class="flex flex-col">
            <div class="grid gap-4 p-4 md:gap-8 md:p-6 lg:gap-12 w-full">

                @if (Model != null)
                {
                    foreach (var item in Model)
                    {
                        <div class="flex items-center gap-4  w-full">
                            <div class="w-1/4">
                                @{
                                    var imagePath = "https://placeholder.com/100x100/png";
                                    if (item.Product.Images != null && item.Product.Images.Any())
                                    {
                                        var firstImg = item.Product.Images.FirstOrDefault();
                                        imagePath = firstImg.DirectoryPath + firstImg.SaveFileName;
                                    }

                                }

                            <img src="@imagePath"
                                 alt="Product image"
                                 class="aspect-square rounded-md object-cover w-[200px] h-[100px]" />
                            
                            </div>
                            <div class="grid gap-1.5 w-1/4">
                                <h2 class="font-semibold text-base sm:text-xl">@item.Product.Title</h2>
                                <div class="text-sm tracking-tighter">상품번호: @item.Product.Id</div>
                            </div>
                            <div class="grid gap-1.5 w-1/4">
                                <h5 class="text-xl font-semibold tracking-tight text-gray-900 dark:text-white">
                                    @string.Format("{0:N0}", item.Product.Price)원 
                                </h5>
                            </div>
                            <div class="grid gap-1.5 w-1/4">
                                <div class="max-w-xs mx-3">
                                    <div class="relative flex items-center max-w-[8rem]">
                                        <button type="button" data-id="@item.Id"
                                                class="minus-button
bg-gray-100 dark:bg-gray-700 dark:hover:bg-gray-600 dark:border-gray-600 hover:bg-gray-200 border border-gray-300 rounded-s-lg p-3 h-11 focus:ring-gray-100 dark:focus:ring-gray-700 focus:ring-2 focus:outline-none">
                                            <svg class="w-3 h-3 text-gray-900 dark:text-white" aria-hidden="true"
                                                 xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 18 2">
                                                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"
                                                      stroke-width="2" d="M1 1h16" />
                                            </svg>
                                        </button>
                                        <input type="text" id="quantity-input" data-input-counter data-input-counter-min="1"
                                               data-input-counter-max="50" aria-describedby="helper-text-explanation"
                                               class="bg-gray-50 border-x-0 border-gray-300 h-11 text-center text-gray-900 text-sm focus:ring-blue-500 focus:border-blue-500 block w-full py-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                                               placeholder="999" value="@item.Count" required readonly>
                                        <button type="button" data-id="@item.Id"
                                                class="plus-button
bg-gray-100 dark:bg-gray-700 dark:hover:bg-gray-600 dark:border-gray-600 hover:bg-gray-200 border border-gray-300 rounded-e-lg p-3 h-11 focus:ring-gray-100 dark:focus:ring-gray-700 focus:ring-2 focus:outline-none">
                                            <svg class="w-3 h-3 text-gray-900 dark:text-white" aria-hidden="true"
                                                 xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 18 18">
                                                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"
                                                      stroke-width="2" d="M9 1v16M1 9h16" />
                                            </svg>
                                        </button>
                                    </div>
                                </div>
                            </div>
                            <div class="ml-auto grid gap-1 text-right w-1/4">
                                <button onclick="Remove('@item.Id')"
                                        class="th-red-btn">
                                    삭제
                                </button>
                            </div>
                        </div>
                        <div data-orientation="horizontal" role="none" class="shrink-0 bg-gray-100 h-[1px] w-full"></div>
                    }
                }
            </div>
    </section>
    <hr class="my-3 border-gray-200 sm:mx-auto dark:border-gray-700 lg:my-8" />
    <div class="flex justify-center">
        <div class="text-2xl m-2 font-semibold flex items-center ">
            총 주문금액<span class="text-2xl m-4 font-semibold  text-red-500" id="orderTotal">@string.Format("{0:N0}", orderTotal) 원</span>
            <button class="th-bl-btn" onclick="location.href = '/customer/order';">주문하기</button>
        </div>
    </div>
    <hr class="my-3 border-gray-200 sm:mx-auto dark:border-gray-700 lg:my-8" />
</div>




@section Scripts{

    <script>

        $(document).ready(function () {
            $(".plus-button").click(function () {
                var cartId = $(this).data('id'); // Use data-id attribute to get the cartId
                var input = $(this).siblings("input");
                $.ajax({
                    type: 'POST',
                    url: "/Customer/Cart/Plus",
                    data: { cartId: cartId },
                    success: function (response) {
                        console.log(response)
                        if (response.seccess) {
                            input.val(response.data.cartCount); // value를 증가시킴
                            var orderTotal = formatNumberWithoutDecimal(response.data.orderTotal);
                            $("#orderTotal").html(orderTotal + "원");
                        }
                    },
                    error: function (xhr, status, error) {
                        if (response.seccess) {
                            Swal.fire("수량조절 중 에러가 발생했습니다. 잠시 후 다시 시도해주세요.");
                        }
                    }
                });
            });


            $(".minus-button").click(function () {
                var cartId = $(this).data('id'); // Use data-id attribute to get the cartId
                var input = $(this).siblings("input");
                if (input.val() == "1") {
                    Swal.fire("1 이상 선택해주세요.");
                    return;
                }
                $.ajax({
                    type: 'POST',
                    url: "/Customer/Cart/Minus",
                    data: { cartId: cartId },
                    success: function (response) {
                        console.log(response)
                        if (response.seccess) {
                            input.val(response.data.cartCount);
                            var orderTotal = formatNumberWithoutDecimal(response.data.orderTotal);
                            $("#orderTotal").html(orderTotal + "원");
                        }
                    },
                    error: function (xhr, status, error) {
                        if (response.seccess) {
                            Swal.fire("수량조절 중 에러가 발생했습니다. 잠시 후 다시 시도해주세요.");
                        }
                    }
                });
            });



            function Remove(cartId) {
                $.ajax({
                    type: 'POST',
                    url: "/Customer/Cart/Remove",
                    data: { cartId: cartId },
                    success: function (response) {
                        console.log(response)
                        if (response.seccess) {
                            $("#remove_" + cartId).remove();
                        }
                    },
                    error: function (xhr, status, error) {
                        if (response.seccess) {
                            Swal.fire("삭제 중 에러가 발생했습니다. 잠시 후 다시 시도해주세요.");
                        }
                    }
                });
            }
        });


   
    </script>
}